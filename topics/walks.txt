% Graphs - walks and circuits

\section*{Overview}
\begin{outline}[enumerate]
\1 Graphs are fundamental in Computer Science
\1 Graphs model many situations, including networks (e.g., computer, transportation, friends)
\end{outline}


\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------


\section*{Learning Outcomes}
\begin{outline}[enumerate]
\1 Determine how many walks, paths, and trails

\1 Find bridges in a graph.

\1 Determine the number of connected components in a graph

\1 Find Hamilton cycles and Euler circuits

\1 Find the complement of a graph.  
\end{outline}


\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------










\section*{Definitions}

\begin{outline}

\1 A \textbf{graph} is an ordered pair, $G = (V, E)$, where $V$ is a set of vertices (or nodes) and $E$ is the set of edges (pairs of distinct nodes).


\1 The number of vertices is called the \textbf{order} of the graph, $|V|$.


\1 The \textbf{size} of a graph is the number of edges, $|E|$.


\1 Vertices are \textbf{adjacent} if an edge connects them.  That is, if an edge of $G$ is, 
\[
\e = \{v,w\} = \{w,v\} .
\]

\1 A vertex that is an endpoint of an edge is said to be \textbf{incident}.  In other words, $v$ and $\e$ are incident.

\1 The \textbf{degree} (or valence) of a vertex is the number $\rm{deg}(x)$ of edges incident with $x$.
    
\1 The sum of the degrees is even and is equal to twice the number of edges (i.e., the size).
\[
2|E| = \sum_{i=1}^n d_i
\]

\1 A \textbf{loop} is an edge that connects a vertex to itself.  

\1 A \textbf{complete graph} on $n$ vertices, denoted $K_n$, is a graph with $n$ vertices with an edge between each pair of vertices.

\begin{center}
    \input{graphs/k4}    
\end{center}


\1 A \textbf{simple} graph has no loops and, at most, one edge connecting any pair of vertices (i.e., no multiple edges).

\1 The degree of a vertex in a graph is the number of times it is incident with the edges.

\1 A \textbf{walk} is a sequence of $m$ edges:
\[
\{v_0,v_1\}, \{v_1,v_2\}, \dots,  \{v_{m-1},v_m\}, 
\]
A walk can also be denoted as:
\[
v_0 - v_1 - v_2 - \cdots - v_{m-1} - v_m
\]
or as
\[
v_0 e_1 v_1 e_2 v_2 \cdots v_{m-1} e_m v_m 
\]

    \2 A walk can be \textbf{open} or \textbf{closed} depending if $v_0 \ne v_m$ or $v_0 = v_m$, respectively.

    \2 A walk can repeat vertices and edges.  


\1 A \textbf{trail} is a walk with no repeated edges.
    % \2 By default, a path is a trail.
    \2 ``Loop trails'' exist (i.e., repeated vertices can happen)


\1 A \textbf{path} \textit{is a trail} with no repeated vertices.
    \2 No loops
    

\1 A graph is \textbf{connected} if there is a walk between every pair of vertices.

    \2 If $G$ is connected, then any two distinct vertices of $G$ can be connected by a path.

    \2 If $v$ and $w$ are part of a cycle, an edge can be removed, and a trail will still exist.

    \2 If $G$ is connected and contains a cycle, removing an edge will not disconnect the graph.


% Euler Circuit
% \1 \textbf{Euler circuit} is a circuit that has at least one edge, starts and ends with the same vertex, uses every vertex at least once, and uses every edge exactly once. 

\end{outline}





\begin{table}[h!]
\begin{tabular}{lcccc}
\toprule 
               & \textbf{Repeated Edge?} & \textbf{Repeated Vertex?} & \textbf{Cycle}   & \textbf{Must have an edge} \\
               \toprule
\textbf{Walk}           & allowed        & allowed          & allowed & no                \\  
\textbf{Trail}          & no             & allowed          & allowed & no                \\
\textbf{Path}           & no             & no               & no      & no                \\
\textbf{Closed Walk}    & allowed        & allowed          & yes     & no                \\
\textbf{Circuit}        & no             & allowed          & yes     & yes               \\
\textbf{Simple circuit} & no             & first/last       & yes     & yes   \\
\bottomrule
\end{tabular}
\end{table}

% \input{graphs/konigsberg}


% \begin{figure}
%     \centering
%     \input{graphs/k4} 
%     \caption{Caption}
%     \label{fig:enter-label}
% \end{figure}


\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------
\section*{Subgraphs}

\begin{definition}
    Let $G = (V, E)$.  A subgraph $H = (V', E')$ of $G$  is a graph such that $V \subset V'$ and $E' \subseteq E$.
\end{definition}



\begin{example}
    Draw (list) all subgraphs of $K_3$ (shown below).  Group by vertices sets (1 vertex, two vertices, ...) and then by the number of edges (i.e., subgraphs with no edges, one edge, two edges, ...).  How many subgraphs are there?
\end{example}



\begin{center}
\begin{tikzpicture}
%% vertices
\draw[fill=black] (0,0) circle (3pt);
\draw[fill=black] (4,0) circle (3pt);
\draw[fill=black] (2,3) circle (3pt);

%% vertex labels
\node at (-0.5,0) {$v_3$};
\node at (4.5,0) {$v_2$};
\node at (2,3.3) {$v_1$};

%% edges
\draw[thick] (0,0) -- (4,0) -- (2,3) -- (0,0);
\end{tikzpicture}    
\end{center}







\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------
\section*{Connectedness}

\begin{definition}
    Let $G$ be a graph.  Two vertices $v$ and $w$ of $G$ are connected if, and only if, a walk exists from $v$ to $w$.  The graph $G$ is connected if and only if a walk exists between every pair of vertices in $G$.  
    \[
    G \text{ is connected } \Leftrightarrow \forall v,w \in G, \exists \text{ a walk from } v \to w
    \]
\end{definition}

A graph is NOT connected if there does not exist a walk between a pair of vertices.  


Below are some facts relating to circuits and connectedness.  
\begin{theorem}
    Let $G$ be a graph.

    \begin{outline}[enumerate]
        \1 If $G$ is connected, then any two distinct vertices of $G$ can be connected by a path.

        \1 If vertices $v$ and $w$ are part of a circuit in $G$ and one edge is removed, then a trail from $v$ to $w$ still exists in $G$.

        \1 If $G$ is connected and $G$ contains a circuit, then an edge of the circuit can be removed without disconnecting $G$.
    \end{outline}
\end{theorem}




\begin{definition}
    A graph $H$ is a \textbf{connected component} of a graph $G$ if and only if, 
    \begin{outline}[enumerate]
        \1 $H$ is a subgraph of $G$,
        \1 $H$ is connected; and
        \1 no connected subgraph of $G$ has $H$ as a subgraph and contains vertices or edges that are not in $H$.
    \end{outline}
\end{definition}



\begin{definition}
    A \textbf{bridge} is an edge that disconnects the graph.  
\end{definition}


\begin{example}
    The edge $\{d,e\}$ is a bridge in the following graph.
\end{example}

\begin{center}
 \begin{tikzpicture}
 % define coordinates
\def\a{(0,0)}
\def\b{(0,2)}
\def\c{(0,4)}
\def\d{(1,4)}
\def\e{(3,4)}
\def\f{(4,5)}
\def\g{(4,3)}
\def\h{(2,2)}
\def\i{(3,2)}
\def\j{(2.5,1)}

% Offset adjustments
\def\p{0.35}
\def\q{0.25}

% define label positions
\def\aa{(0-\p,0)}
\def\bb{(0-\p,2)}
\def\cc{(0-\p,4)}
\def\dd{(1,4+\p)}
\def\ee{(3,4+\p)}
\def\ff{(4,5+\p)}
\def\gg{(4+\p,3)}
\def\hh{(2+\q,2+\q)}
\def\ii{(3,2+\p)}
\def\jj{(2.5,1-\p)}

%% vertices
\draw[fill=black] \a circle (3pt);
\draw[fill=black] \b circle (3pt);
\draw[fill=black] \c circle (3pt);
\draw[fill=black] \d circle (3pt);
\draw[fill=black] \e circle (3pt);
\draw[fill=black] \f circle (3pt);
\draw[fill=black] \g circle (3pt);
\draw[fill=black] \h circle (3pt);
\draw[fill=black] \i circle (3pt);
\draw[fill=black] \j circle (3pt);

%% vertex labels
\node at \aa {$a$};
\node at \bb {$b$};
\node at \cc {$c$};
\node at \dd {$d$};
\node at \ee {$e$};
\node at \ff {$f$};
\node at \gg {$g$};
\node at \hh {$h$};
\node at \ii {$i$};
\node at \jj {$j$};

%%% edges
\draw[thick] \a -- \c;
\draw[thick] \c -- \e;
\draw[thick] \e  -- \f -- \g -- \e;
\draw[thick] \b -- \i -- \h -- \d -- \b ;
\draw[thick] \i -- \j;
\end{tikzpicture}
\end{center}


\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------
\section*{Euler Circuits}


\begin{theorem}
A graph $G$ \textbf{has an} \textbf{Euler circuit} if and only if $G$ is connected and every vertex of $G$ has an even degree.
\end{theorem}


\begin{definition}
Let $G$ be a graph and $v$ and $w$ be distinct vertices.  An \textbf{Euler trail} from $v$ to $w$ is a sequence of adjacent edges and vertices that starts with $v$ and ends at $w$, passing through every vertex of $G$ at least once and traversing every edge exactly once.      
\end{definition}



\begin{corollary}
    Let $G$ be a graph with $v$ and $w$ as distinct vertices. An \textbf{Euler trail exists} from $v$ to $w$ if and only if $G$ is connected and $v$ and $w$ have odd degrees, while all other vertices have even degrees.  
\end{corollary}


%\begin{center}
\input{graphs/konigsberg}    
%\end{center}





\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------
\section*{Hamilton Cycles}


\begin{definition}
    A graph $G$ has a \textbf{Hamilton Cycle} (or Hamilton Circuit) if there is a cycle containing every vertex exactly once (except for the first and last, which are the same).  
\end{definition}


\begin{theorem}
    If a graph $G$ has a Hamilton Cycle, then $G$ has a subgraph $H$ with:

    \begin{outline}[enumerate]
        \1 $H$ contains every vertex of $G$
        \1 $H$ is connected
        \1 $h$ has the same number of edges as vertices, 
        \[ |V(H)| = |E(H)| \]
    \1 Every vertex of $H$ has degree 2.
    \end{outline}
\end{theorem}

\textbf{Notes}: 
\begin{outline}
    \1 Finding Hamilton Cycles is challenging
    \1 {Use the Theorem above to prove NO Hamilton Cycle exists in a graph.}
\end{outline}


\begin{example}
    Prove no Hamilton cycle exists in the following graph.

    \begin{center}
        \begin{tikzpicture}
%% vertices
\draw[fill=black] (0,0) circle (3pt);
\draw[fill=black] (2,1) circle (3pt);
\draw[fill=black] (-2,1) circle (3pt);
\draw[fill=black] (2,-1) circle (3pt);
\draw[fill=black] (-2,-1) circle (3pt);

%% vertex labels
\node at (0,0.5)  {$b$};
\node at (2.3,-1) {$d$};
\node at (2.3,1) {$c$};
\node at (-2.3,1) {$a$};
\node at (-2.3,-1) {$e$};
%%% edges
\draw[thick] (-2,-1) -- (2,1) -- (2,-1) -- (-2,1) -- (-2,-1);
\end{tikzpicture}
    \end{center}
\end{example}



\begin{lemma}\label{lem:eveneveneven}
    The sum of an even number of even integers is even.
\end{lemma}
\pf 
\[
\sum_{i=1}^{2m} 2k_i = 2 \sum_{i=1}^{2m} k_i = 2 K .    
\]
\qed


\begin{lemma}\label{lem:evenoddeven}
    The sum of an even number of odd integers is even.
\end{lemma}
\pf Let $x_1, x_2, \dots, x_{2m}$ be odd integers.  Then for all $i$, $x_i = 2k_i + 1$ for some $k_i \in \Z$. We have, 
\[
\sum_{i=1}^{2m} x_i = \sum_{i=1}^{2m} 2k_i + 1 = 2 \sum_{i=1}^{2m} k_i + \sum_{i=1}^{2m}  1 = 2 K + 2m = 2(K+m) ,  
\]
where $K+m \in \Z$.  Therefore, the sum of an even number of odd integers is even.
\qed 

\begin{theorem}
    Let  $G = (V, E)$ be a graph.  Then, there are an even number of odd-degree vertices.  
\end{theorem}
\pf Partition the vertices into those that are even and odd.  Let $V_1$ be vertices with even degrees and $V_2$ with odd degrees.  Then, $V = V_1 \cup V_2$ with $V_1 \cap V_2 = \varnothing$.  We have, 
\[
\sum_{v \in V} \rm{deg}(v) = \sum_{v \in V_1} \rm{deg}(v) + \sum_{w \in V_2} \rm{deg}(w) = 2 |E| .
\]
Then, by subtracting from both sides to solve for the odd sum, we have 
\[
 \sum_{w \in V_2} \rm{deg}(w) = 2 |E|  - \sum_{v \in V_1} \rm{deg}(v) = 2M .
\]
From Lemma \ref{lem:evenoddeven}, $|V_2|$ must be even. \qed




\begin{theorem}
    Let $G$ be a graph of order $n \ge 3$ which satisfies $\deg(x) + \deg(y) \ge n$ for all pairs of distinct nonadjacent vertices.  Then $G$ has a Hamilton cycle.
\end{theorem}





\begin{theorem}
    Let $G$ be a graph of order $n \ge 3$ such that all vertices have degree $\ge \frac{n}{2}$, then $G$ has a Hamilton Cycle.  
\end{theorem}









\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------

\subsection*{Traveling Salesman Problem}
The \textbf{traveling salesman problem} attempts to find a Hamilton Circuit give a weighted graph.  A \textbf{weighted graph} is a graph where the edges have numerical quantities associated with them.  These weights can be distance or cost.  

 The simplest approach is brute-force. List every Hamilton cycles and compute its total sum of weights.  Select the minimal ``cost" circuit.  For example, consider the weighted complete graph below.

 \begin{example}
     Find a minimal Hamilton cycle.
\begin{center}
     \begin{tikzpicture}
%% vertices
\draw[fill=black] (0,0) circle (3pt);
\draw[fill=black] (4,0) circle (3pt);
\draw[fill=black] (2,1) circle (3pt);
\draw[fill=black] (2,3) circle (3pt);
%% vertex labels
\node at (-0.5,0) {a};
\node at (4.5,0) {b};
\node at (2.35,1.2) {c};
\node at (2,3.35) {d};
%%% edges
\draw[thick] (0,0) -- (4,0);
\draw[thick]  (4,0) -- (2,1);
\draw[thick] (4,0) -- (2,3);
\draw[thick] (0,0) -- (2,1);
\draw[thick]  (0,0) -- (2,3);
\draw[thick]  (2,1) -- (2,3);
%% edge labels
\node at (1,2) {30};
\node at (3,2) {30};
\node at (1.75,1.75) {25};
\node at (1.2,0.85) {35};
\node at (2.5,0.5) {40};
\node at (2,-0.25) {50};

\end{tikzpicture}
\end{center}

We have the following cycles listed by vertices:

$a-b-c-d-a \to  50 + 40 + 25 + 30 = 145$ \\
$a-b-d-c-a \to  50 + 30 + 25 + 35 = 140$ \\
$a-c-b-d-a \to  35 + 40 + 30 + 30 = 135$ \\

Note, the rest are reverse cycles.  Therefore, for a complete graph of $n$ vertices, there are $(n-1)! / 2$ Hamilton cycles.    
 \end{example}


 \textbf{Note}: The general traveling salesman problem is open (i.e., no known solution).  Here is the problem with brute-force.  If there were $30$ vertices, there are more than $10^{30}$ Hamilton cycles.  At one nanosecond per cycle, computation would be more than $10^{14}$ years.  
 





\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------

\subsection*{Complement Graphs}

\begin{definition}
    If $G$ is a simple graph (no loops, no multiple edges), the complement of $G$, denoted $G\,'$ or $G^c$, is defined as $G' = (V, E\,')$ where $\{a,b\} \in E\,'$ if and only if $\{a,b\} \not \in E$.  That is, $G\,'$ has the same vertices, but for every pair of vertices $u,v$ for which there is no edge, create an edge.  
\end{definition}

The following are complement graphs.  

  \begin{center}
    \begin{tikzpicture}
%% vertices
\draw[fill=black] (0,0) circle (3pt);
\draw[fill=black] (2,0) circle (3pt);
\draw[fill=black] (2,2) circle (3pt);
\draw[fill=black] (0,2) circle (3pt);
 
%% vertex labels
\node at (0,-0.35)  {$a$};
\node at (2.0,-0.350) {$b$};
\node at (2,2.35) {$c$};
\node at (0,2.35) {$d$};

%%% edges
\draw[thick] (0,0) -- (2,0) -- (2,2) -- (0,2) -- (0,0);

% Caption
\node at (1,-1) {$G$};
% -----------------------------------

%% vertices
\draw[fill=black] (4,0) circle (3pt);
\draw[fill=black] (6,0) circle (3pt);
\draw[fill=black] (6,2) circle (3pt);
\draw[fill=black] (4,2) circle (3pt);
 
%% vertex labels
\node at (4,-0.35)  {$a$};
\node at (6.0,-0.350) {$b$};
\node at (6,2.35) {$c$};
\node at (4,2.35) {$d$};

%%% edges
\draw[thick] (4,0) -- (6,2);
\draw[thick] (4,2) -- (6,0);

% Caption
\node at (5,-1) {$G\,'$};
\end{tikzpicture}

\end{center}



\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------

\section*{TiKz}
Drawing Graphs in TiKz.  Code the vertices and edges; add labels if desired.

\begin{verbatim}
\begin{tikzpicture}
  % Vertices
  % -------------------------------------
    \draw[fill=black] (0,0) circle (3pt);
    \draw[fill=black] (4,0) circle (3pt);
    \draw[fill=black] (2,1) circle (3pt);
    \draw[fill=black] (2,3) circle (3pt);

  %% Edges
  % -------------------------------------
    \draw[thick] (0,0)--(4,0);
    \draw[thick] (4,0)--(2,1);
    \draw[thick] (2,1)--(0,0);
    \draw[thick] (0,0)--(2,3);
    \draw[thick] (2,3)--(4,0);
    \draw[thick] (2,3)--(2,1)

  %% Vertex labels
  % -------------------------------------
    \node at (-0.5,0)   {1};
    \node at (4.5,0)    {2};
    \node at (2.5,1.2)  {3};
    \node at (2,3.3)    {4};
\end{tikzpicture}
\end{verbatim}

\textbf{Note}: Edges can be coded as a walk as instead of individually, such as:
\begin{verbatim}
  \draw[thick] (0,0)--(4,0)--(2,1)--(0,0)--(2,3)--(4,0)--(2,1)--(2,3);    
\end{verbatim}
    


 






\rule[0.0051in]{\textwidth}{0.00025in}
% ----------------------------------

\section*{Homework Exercises}

% +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
% University of Southern Maine
% Department of Computer Science
% Discrete Mathematics II (COS 280)
% James Quinlan (https://cs.usm.maine.edu/~james.quinlan/)
% Section: 10.1 - Walks & Circuits 
% Problems: # 5, 6bc, 8, 24, 30, 42 
% +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

\begin{outline}[enumerate]

% 5.
\1 Consider the graph
	
	
\begin{figure}[ht!]
    \centering
	\begin{tikzpicture}[line cap=round,line join=round,>=triangle 45,x=1.0cm,y=1.0cm]
		\clip(-3.28,0.64) rectangle (7.06,5.08);
		\draw [line width=1.pt] (2.,3.)-- (6.,3.);
		\draw [shift={(0.,0.)},line width=1.pt]  		
		plot[domain=0.982793723247329:2.1587989303424644,variable=\t]
		({1.*3.6055512754639896*cos(\t r)+0.*3.6055512754639896*sin(\t r)},	
		{0.*3.6055512754639896*cos(\t r)+1.*3.6055512754639896*sin(\t r)});

		\draw [shift={(0.,6.)},line width=1.pt]  
		plot[domain=4.124386376837122:5.3003915839322575,variable=\t]
		({1.*3.6055512754639896*cos(\t r)+0.*3.6055512754639896*sin(\t r)},
		{0.*3.6055512754639896*cos(\t r)+1.*3.6055512754639896*sin(\t r)});

		\draw [shift={(0.,4.)},line width=1.pt]  
		plot[domain=3.6052402625905993:5.81953769817878,variable=\t]
		({1.*2.23606797749979*cos(\t r)+0.*2.23606797749979*sin(\t r)},
		{0.*2.23606797749979*cos(\t r)+1.*2.23606797749979*sin(\t r)});

		\draw [shift={(0.,2.)},line width=1.pt]
		 plot[domain=0.4636476090008061:2.677945044588987,variable=\t]
		({1.*2.23606797749979*cos(\t r)+0.*2.23606797749979*sin(\t r)},
		{0.*2.23606797749979*cos(\t r)+1.*2.23606797749979*sin(\t r)});

		\begin{scriptsize}
		\draw [fill=black] (-2.,3.) circle (3pt);
		\draw[color=black] (-2.36,3.07) node {a};
		\draw [fill=black] (2.,3.) circle (3pt);
		\draw[color=black] (2.14,3.37) node {b};
		\draw [fill=black] (6.,3.) circle (3pt);
		\draw[color=black] (6.14,3.37) node {c};
		
		\draw[color=black] (0.0,4.4) node {$e_1$};
		\draw[color=black] (0.0,3.8) node {$e_2$};
		\draw[color=black] (0.0,2.6) node {$e_3$};
		\draw[color=black] (0.0,2.0) node {$e_4$};
		\draw[color=black] (4.1,2.85) node {$e_5$};

		\end{scriptsize}
	\end{tikzpicture}
 \caption{Graph in Problem 1.}
\end{figure}


	\2 How many paths are the from $a$ to $c$?

	\2 How many trails are there from $a$ to $c$?

	\2 How many walks are there from $a$ to $c$?






% 6bc.
\1 An edge whose removal disconnects the graph it is a part of is called a \textbf{bridge}.
 

	\2 Find all bridges in the graph: 

\begin{figure}[ht!]
    \centering
     \begin{tikzpicture}[line cap=round,line join=round,>=triangle 45,x=1.0cm,y=1.0cm]
\clip(-1.18,0.7) rectangle (6.46,6.24);
\draw [line width=1.pt] (1.,5.)-- (3.,5.);
\draw [line width=1.pt] (5.,5.)-- (3.,5.);
\draw [line width=1.pt] (1.,5.)-- (1.,4.);
\draw [line width=1.pt] (1.,4.)-- (3.,4.);
\draw [line width=1.pt] (3.,4.)-- (3.,3.);
\draw [line width=1.pt] (3.,3.)-- (2.,2.);
\draw [line width=1.pt] (2.,2.)-- (4.,2.);
\draw [line width=1.pt] (4.,2.)-- (3.,3.);
\draw [line width=1.pt] (3.,5.)-- (3.,4.);
\draw [line width=1.pt] (1.,4.)-- (0.,3.);
\begin{scriptsize}
\draw [fill=black] (1.,5.) circle (2.5pt);
\draw[color=black] (0.88,5.47) node {$A$};
\draw [fill=black] (3.,5.) circle (2.5pt);
\draw[color=black] (2.98,5.47) node {$B$};
\draw [fill=black] (5.,5.) circle (2.5pt);
\draw[color=black] (4.96,5.43) node {$C$};
\draw [fill=black] (1.,4.) circle (2.5pt);
\draw[color=black] (0.98,3.69) node {$D$};
\draw [fill=black] (3.,4.) circle (2.5pt);
\draw[color=black] (3.22,4.11) node {$E$};
\draw [fill=black] (3.,3.) circle (2.5pt);
\draw[color=black] (3.22,3.19) node {$F$};
\draw [fill=black] (2.,2.) circle (2.5pt);
\draw[color=black] (1.62,1.85) node {$G$};
\draw [fill=black] (4.,2.) circle (2.5pt);
\draw[color=black] (4.22,1.85) node {$H$};
\draw [fill=black] (0.,3.) circle (2.5pt);
\draw[color=black] (-0.3,3.31) node {$I$};
\end{scriptsize}
\end{tikzpicture}
\caption{Graph in Problem 2}
\end{figure}




\2 
\begin{center}
 \begin{tikzpicture}
 % define coordinates
\def\a{(0,0)}
\def\b{(0,2)}
\def\c{(0,4)}
\def\d{(1,4)}
\def\e{(3,4)}
\def\f{(4,5)}
\def\g{(4,3)}
\def\h{(2,2)}
\def\i{(3,2)}
\def\j{(2.5,1)}

% Offset adjustments
\def\p{0.35}
\def\q{0.25}

% define label positions
\def\aa{(0-\p,0)}
\def\bb{(0-\p,2)}
\def\cc{(0-\p,4)}
\def\dd{(1,4+\p)}
\def\ee{(3,4+\p)}
\def\ff{(4,5+\p)}
\def\gg{(4+\p,3)}
\def\hh{(2+\q,2+\q)}
\def\ii{(3,2+\p)}
\def\jj{(2.5,1-\p)}

%% vertices
\draw[fill=black] \a circle (3pt);
\draw[fill=black] \b circle (3pt);
\draw[fill=black] \c circle (3pt);
\draw[fill=black] \d circle (3pt);
\draw[fill=black] \e circle (3pt);
\draw[fill=black] \f circle (3pt);
\draw[fill=black] \g circle (3pt);
\draw[fill=black] \h circle (3pt);
\draw[fill=black] \i circle (3pt);
\draw[fill=black] \j circle (3pt);

%% vertex labels
\node at \aa {$a$};
\node at \bb {$b$};
\node at \cc {$c$};
\node at \dd {$d$};
\node at \ee {$e$};
\node at \ff {$f$};
\node at \gg {$g$};
\node at \hh {$h$};
\node at \ii {$i$};
\node at \jj {$j$};

%%% edges
\draw[thick] \a -- \c;
\draw[thick] \c -- \e;
\draw[thick] \e  -- \f -- \g -- \e;
\draw[thick] \b -- \i -- \h -- \d -- \b ;
\draw[thick] \i -- \j;
\end{tikzpicture}
\end{center}











% 8.
\1 Find the number of connected components for each of the following graphs (see graphs in book page 694).  You do not have to draw the graphs.


% \input{graphs/manyTikz}
% \hl{NOT DONE}







% 24. 
\1 Find the complement of each of the following graphs.  

\2 The graph is given by: 
 
\begin{center}
 \begin{tikzpicture}
%% vertices
\draw[fill=black] (0,0) circle (3pt);
\draw[fill=black] (0,4) circle (3pt);
\draw[fill=black] (2,2) circle (3pt);
\draw[fill=black] (-2,2) circle (3pt);
%% vertex labels
\node at (-0.5,0) {$v_1$};
\node at (0,4.5) {$v_2$};
\node at (2.5,2) {$v_3$};
\node at (-2.5,2) {$v_4$};
%%% edges
\draw[thick] (0,0) -- (-2,2) -- (0,4) -- (2,2) -- (0,4) -- (0,0);
\end{tikzpicture}
     
\end{center}



	\2 The graph, 

\begin{center}
 \begin{tikzpicture}
%% vertices
\draw[fill=black] (0,0) circle (3pt);
\draw[fill=black] (2,0) circle (3pt);
\draw[fill=black] (0,2) circle (3pt);
\draw[fill=black] (2,2) circle (3pt);
%% vertex labels
\node at (-0.5,0) {$v_1$};
\node at (2.5,0) {$v_2$};
\node at (-0.5,2) {$v_3$};
\node at (2.5,2) {$v_4$};
%%% edges
\draw[thick] (0,0) -- (2,0);
\draw[thick] (0,2) -- (2,2);
\end{tikzpicture}
\end{center}


% 30.
\1 Find Hamiltonian circuits for the graph.
% SOLUTION: a - l - k - j - e -d - c -f -i - h - g - b - a
\begin{center}
 \begin{tikzpicture}
%% vertices
\draw[fill=black] (0,0) circle (3pt);
\draw[fill=black] (2,0) circle (3pt);
\draw[fill=black] (3,0) circle (3pt);
\draw[fill=black] (0,2) circle (3pt);
\draw[fill=black] (2,2) circle (3pt);
\draw[fill=black] (3,2) circle (3pt);

\draw[fill=black] (1,2.5) circle (3pt);
\draw[fill=black] (2,3) circle (3pt);
\draw[fill=black] (0,4) circle (3pt);
\draw[fill=black] (1,4) circle (3pt);
\draw[fill=black] (3,4) circle (3pt);
\draw[fill=black] (2,6) circle (3pt);

%% vertex labels
\node at (-0.35,0) {$j$};
\node at (-0.35,2) {$k$};
\node at (-0.35,4) {$l$};
\node at (3.35,0) {$d$};
\node at (3.35,2) {$c$};
\node at (3.35,4) {$b$};

\node at (2,-0.35) {$e$};
\node at (0.75,4) {$h$};
\node at (0.75,2.65) {$i$};
\node at (2.35,1.75) {$f$};
\node at (2.35,3) {$g$};
\node at (2,6.35) {$a$};


%%% edges
\draw[thick] (0,0) -- (3,0) -- (3,4) -- (2,6) -- (0,4) -- ( 0,0);

\draw[thick] (2,2) -- (2,0) -- (1,2.5) -- (1,4) -- (3,4) -- (2,3) -- (1,4) -- (2,3) -- (2,2) -- (3,2);
\draw[thick] (0,2) -- (1,2.5) -- (2,2);
\end{tikzpicture}
\end{center}





% 42. A traveler in Europe wants to visit each of the cities.  
\1 A traveler in Europe wants to visit each of the cities (see table).  List a few ``tours'' (Hamilton Cycle), only a few have a chance of being minimal distance.  Then take the on with least distance.   % \hl{NOT DONE}


\begin{table}[h]
\begin{tabular}{lccccc}
\toprule
           & Berlin & Brussels & Dusseldorf & Luxembourg & Munich \\
           \midrule 
Brussels   & 783    &          &            &            &        \\
Dusseldorf & 564    & 223      &            &            &        \\
Luxembourg & 764    & 219      & 224        &            &        \\
Munich     & 585    & 771      & 613        & 517        &        \\
Paris      & 1057   & 308      & 497        & 375        & 832   \\
\bottomrule
\end{tabular}
\caption{European Tour}
\end{table}
\end{outline}

